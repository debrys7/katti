* Katti who?  ðŸš€ 

Katti is in the development phase. We are continuously working on improving Katti and adding new features. Therefore we will release new versions in regular intervals.

The development of Katti started as a pure crawling framework. In the meantime, Katti not only offers the possibility to automatically load websites and store the data, but also provides the tools to analyze the obtained data. The goal is to develop a scalable platform that allows an easy automated analysis of websites and their infrastructure.

** Disclaimer
This is the proof of concept of the crawling engine. The crawling engine is part of our [[https://doi.acm.org?doi=3543873.3587351][paper]] for WebConf 2023. We are working on the release of Katti v0.2, including a number of improvements to the crawling engine and the scanner engine. Soon you will be able to find the project at the following [[https://github.com/BSI-Bund/Katti][link]].

** Tools we are using together with Katti
- To monitor celery: [[https://flower.readthedocs.io/en/latest/][flower]]
- Data exploration and dashboards: [[https://www.metabase.com/][Metabase]]
- GUI builder: [[https://www.appsmith.com/][Appsmith]]
- Celery backend and cache: [[https://redis.io/][Redis]]
- Message broker: [[https://www.rabbitmq.com/][RabbitMQ]]
- Web server: [[https://www.uvicorn.org/][Uvicorn]]
- Database: [[https://www.mongodb.com/][MongoDB]]

** Installation instructions
*Requirements*
- GNU/Linux based operating system (tested on Ubuntu 20.04 and Arch Linux)
- [[https://www.python.org/][Python >= 3.10]] (tested on Python 3.10)
- [[https://www.docker.com/][Docker]], Docker Compose

Minimum tested hardware requirements: 8 core CPU, 12 GB RAM.
As for the operating system, we recommend Ubuntu 20.04, as newer versions might not work well with MongoDB.

Steps to do fancy stuff:
1. Clone this repository.
2. Install Python, Docker and Docker Compose for your operating system.
3. Start the backbone services:
   #+begin_src sh
   $ cd /path/to/katti
   $ docker-compose up -d
   #+end_src
4. Optional: Create a virtual environment
   #+begin_src sh
   $ pip install virtualenv
   $ virtualenv venv --python=/bin/python # choose your preferred python binary here
   $ source venv/bin/activate
   #+end_src
5. Install the requirements:
   #+begin_src sh
   $ pip install -r requirements.txt
   #+end_src
6. Install the app:
   #+begin_src sh
   $ python setup.py install
   #+end_src
7. Run the first-time setup script to prepare the database:
   #+begin_src sh
   $ python Scripts/SetupKatti.py
   #+end_src
8. Start the API server:
   #+begin_src sh
   $ cd FastAPI/
   $ uvicorn FastAPIApp:app --host 0.0.0.0 --port 8000
   #+end_src
9. Start the Celery worker:
   #+begin_src sh
   $ cd CeleryApps/
   $ celery -A KattiApp worker -Q crawling_requests,crawling_analysis,scanning --concurrency 6
   #+end_src

** Troubleshooting
*** Import errors when importing local modules
Make sure your virtual environment is activated and the =$PYTHONPATH= environment variable is set to
=/path/to/katti/source_code=. If you use GNU Screen, you might have to
re-activate the virtual environment and set the =$PYTHONPATH= variable in each
screen session.

#+begin_src sh
$ source /path/to/katti/venv/bin/activate
$ export PYTHONPATH=$PYTHONPATH:/path/to/katti/source_code
#+end_src

* Next steps
- Publish a GUI for working and managing Katti
- Add a means of user management
- Create a detailed user documentation
